from imports import *

bot = Bot(token=config.token, disable_web_page_preview=True)
dp = Dispatcher(bot)


async def sql_handler(message):

    if message.from_user.id == config.owner_id:
        try:
            cursor.execute(message.text[message.text.find(' '):])
            connect.commit()
            a = time.time()
            bot_msg = await message.answer(f'üïòPlease wait while me doing SQL request', parse_mode="Markdown")
            if bot_msg:
                b = time.time()
                await bot_msg.edit_text(f"üöÄ*SQL –ó–∞–ø—Ä–æ—Å –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω –∑–∞ {round((b - a) * 1000)} ms*",
                                        parse_mode="Markdown")
        except Exception as e:
            connect.rollback()
            await message.answer(f"‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏\n‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")
    else:
        await message.answer("‚ùå *–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –±–æ—Ç–∞*",parse_mode="Markdown")


async def chats_handler(message):
   status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
   status_block = str(status_block[0])

   if status_block == 'on':
      return


   user_id = message.from_user.id
   user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
   user_name = str(user_name[0])

   user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
   user_status = str(user_status[0])

   if user_status in ['Owner', 'Helper_Admin', 'Admin']:
      chats = cursor.execute(f'SELECT * from chats')
      list_chat = []
      num = 0

      for chat in chats:
         
         num += 1

         list_chat.append(f'üìé <b>NAME: {chat[1]} | üîé ID:</b> <code>{chat[0]}</code> <b>| üìÖ DATA:</b> <code>{chat[2]}</code>')
      
      list = '\n'.join(list_chat)

      await message.reply(list, parse_mode='html')
   else:
      return await message.reply('‚ùóÔ∏è –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ <b>ADMIN</b>', parse_mode='html')




async def register_chat_handler(message):
   status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
   status_block = str(status_block[0])

   if status_block == 'on':
      return

   user_id = message.from_user.id
   user_name = message.from_user.get_mention(as_html=True)

   chat_id = message.chat.id
   group_name = message.chat.full_name
   cursor.execute(f"SELECT chat_id FROM chats WHERE chat_id = '{chat_id}'")

   if user_id == chat_id:
      return await message.reply('‚ùóÔ∏è –ù–µ–ª—å–∑—è —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –õ–° –±–æ—Ç–∞, –≤ <b>–∫–∞—á–µ—Å—Ç–≤–µ —á–∞—Ç–∞</b>', parse_mode='html')

   if cursor.fetchone() is None:
      text_register_chat = f'''
üí≠ <code>{user_name}</code> , –≤—ã <b>—É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏</b> —á–∞—Ç <code>{group_name}</code> 
      '''
      time_register = f'{datetime.now()}'
      photo_new_chat = open('newchat.jpg', 'rb')
      cursor.execute("INSERT INTO chats VALUES(?, ?, ?);", (chat_id, group_name, time_register[:19]))
      connect.commit()

      await bot.send_photo(message.chat.id, photo_new_chat, text_register_chat, parse_mode='html')
   else:
      return await message.reply(f'‚ùóÔ∏è <code>{group_name}</code> <b>—É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω</b>', parse_mode='html')

async def cl_handler(message):
   try:
      status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
      status_block = str(status_block[0])

      if status_block == 'off':
         return


      
      user_id = message.from_user.id
      user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
      user_name = str(user_name[0])

      su1 = str(message.text.split()[1])
      win = numexpr.evaluate(f'{su1}')
      win2 = '{:,}'.format(win).replace(',', '.')

      text_cl = f'''
‚ûó <b>{su1}</b> = <code>{win2}</code>
      '''
      await message.reply(text_cl, parse_mode='html')
   except OverflowError :
      text = f'''
‚ùóÔ∏è <b>–û—à–∏–±–∫–∞</b> , —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ 
      '''
      await message.reply(f'{text}', parse_mode='html')
   except SyntaxError:
      text = f'''
‚ùóÔ∏è <b>–û—à–∏–±–∫–∞</b>, –≤ –ø—Ä–∏–º–µ—Ä–µ –µ—Å—Ç—å STRING [–±—É–∫–≤—ã, —Å–∏–º–≤–æ–ª—ã]
      '''
      await message.reply(f'{text}', parse_mode='html')

   except TypeError:
      text = f'''
‚ùóÔ∏è <b>–û—à–∏–±–∫–∞</b>, —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–Ω—ã–º
      '''
      await message.reply(f'{text}', parse_mode='html')

async def reset_id_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return

    msg = message
    user_id = msg.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])

    user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
    user_status = str(user_status[0])

    reply_user_id = int(message.text.split()[1])

    text = ' '.join(message.text.split()[2:])


    reply_user_name = cursor.execute(f"SELECT user_name from users where user_id = {reply_user_id}").fetchone()
    reply_user_name = str(reply_user_name[0])

    if user_status == 'Helper_Admin':
       await message.bot.send_message(config.owner_id, f"""
‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a> 
‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –û–±–Ω—É–ª–µ–Ω–∏–µ –ø–æ ID
üíà |–ü—Ä–∏—á–∏–Ω–∞: {text} 
üë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
       """, parse_mode='html')

       await message.bot.send_message(message.chat.id, f"""
‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a> 
‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –û–±–Ω—É–ª–µ–Ω–∏–µ –ø–æ ID
üíà |–ü—Ä–∏—á–∏–Ω–∞: {text} 
üë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
       """, parse_mode='html')
       cursor.execute(f'UPDATE users SET balance = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE users SET bank = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE users SET depozit = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE users SET rating = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE users SET ethereum = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE mine SET iron = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE mine SET metall = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE mine SET bronza = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE farm SET linen = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE farm SET cotton = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE house SET house = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE house SET basement = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE cars SET cars = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE cars SET hp = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE cars SET benz = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET stavka_games = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET stavka_bank = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET stavka_bonus = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET stavka_depozit = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET time_pick = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET time_rake = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET time_craft = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET time_kit = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'DELETE from user_family WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'DELETE from family WHERE owner_id = "{reply_user_id}"')

       connect.commit()
       await message.bot.send_message(reply_user_id, f"""
<b>üÜò | <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>, –í–´ –ë–´–õ–ò –û–ë–ù–£–õ–ï–ù–´ | üÜò</b>
üí≠ | –ü—Ä–∏—á–∏–Ω–∞: <i>{text}</i>
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: <a href='tg://user?id={user_id}'>{user_name}</a> 
       """, parse_mode='html')
       return

    if user_status == 'Owner':
       await message.bot.send_message(message.chat.id, f"""
‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a> 
‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –û–±–Ω—É–ª–µ–Ω–∏–µ –ø–æ ID
üíà |–ü—Ä–∏—á–∏–Ω–∞: {text} 
üë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
       """, parse_mode='html')
       cursor.execute(f'UPDATE users SET balance = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE users SET bank = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE users SET depozit = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE users SET rating = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE users SET ethereum = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE mine SET iron = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE mine SET metall = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE mine SET bronza = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE farm SET linen = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE farm SET cotton = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE house SET house = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE house SET basement = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE cars SET cars = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE cars SET hp = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE cars SET benz = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET stavka_games = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET stavka_bank = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET stavka_bonus = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET stavka_depozit = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET time_pick = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET time_rake = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET time_craft = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'UPDATE bot_time SET time_kit = {0} WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'DELETE from user_family WHERE user_id = "{reply_user_id}"')
       cursor.execute(f'DELETE from family WHERE owner_id = "{reply_user_id}"')
       connect.commit()
       await message.bot.send_message(reply_user_id, f"""
<b>üÜò | <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>, –í–´ –ë–´–õ–ò –û–ë–ù–£–õ–ï–ù–´ | üÜò</b>
üí≠ | –ü—Ä–∏—á–∏–Ω–∞: <i>{text}</i>
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: <a href='tg://user?id={user_id}'>{user_name}</a> 
       """, parse_mode='html')
       return
    else:
       await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –æ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Ç—Å—Ä–∞—Ç–æ—Ä–∞ \"–•–ï–õ–ü–ï–† –ê–î–ú–ò–ù\"", parse_mode='html')




async def ban_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    if not message.reply_to_message:
       await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
       return


    msg = message
    user_id = msg.from_user.id
    reply_user_id = msg.reply_to_message.from_user.id
    user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
    reply_user_name = str(reply_user_name[0])

    


    if user_status == 'Owner':
       await message.bot.send_message(message.chat.id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –ë–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')
       cursor.execute(f'UPDATE users SET status_block = "on"  WHERE user_id = {reply_user_id}')
       full_name = msg.from_user.full_name
       reply_full_name = msg.reply_to_message.from_user.full_name
       print(f'{full_name} –≤—ã–¥–∞–ª –±–∞–Ω –∏–≥—Ä–æ–∫—É: {reply_full_name}')
       connect.commit()
       return
    if user_status == 'Helper_Admin':

       if reply_user_id == config.owner_id:
         return await message.reply(f'‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–∞—Ç—å –±–∞–Ω <b>–≤–ª–∞–¥–µ–ª—å—Ü—É –±–æ—Ç–∞</b>', parse_mode='html')
       else:
         pass

       await message.bot.send_message(config.owner_id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –ë–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')

       await message.bot.send_message(message.chat.id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –ë–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')
       cursor.execute(f'UPDATE users SET status_block = "on"  WHERE user_id = {reply_user_id}')
       full_name = msg.from_user.full_name
       reply_full_name = msg.reply_to_message.from_user.full_name
       print(f'{full_name} –≤—ã–¥–∞–ª –±–∞–Ω –∏–≥—Ä–æ–∫—É: {reply_full_name}')
       connect.commit()
       return
    else:
       await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"HELPER ADMIN\"", parse_mode='html')



async def ban_id_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    msg = message
    user_id = msg.from_user.id
    reply_user_id = int(message.text.split()[1])
    user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    reply_user_name = cursor.execute(f"SELECT user_name from users where user_id = {reply_user_id}").fetchone()
    reply_user_name = str(reply_user_name[0])

    


    if user_status == 'Owner':
       await message.bot.send_message(reply_user_id, f"üìõ | <a href='tg://user?id={user_id}'>{reply_user_name}</a>, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ ID", parse_mode='html')

       await message.bot.send_message(message.chat.id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –ë–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')
       cursor.execute(f'UPDATE users SET status_block = "on"  WHERE user_id = {reply_user_id}')
       full_name = msg.from_user.full_name
       
       print(f'{full_name} –≤—ã–¥–∞–ª –±–∞–Ω –∏–≥—Ä–æ–∫—É: {reply_user_name}')
       connect.commit()
       return
    if user_status == 'Helper_Admin':
       if reply_user_id == config.owner_id:
         return await message.reply(f'‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–∞—Ç—å –±–∞–Ω <b>–≤–ª–∞–¥–µ–ª—å—Ü—É –±–æ—Ç–∞</b>', parse_mode='html')
       else:
         pass


       await message.bot.send_message(reply_user_id, f"üìõ | <a href='tg://user?id={user_id}'>{reply_user_name}</a>, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ ID", parse_mode='html')
       await message.bot.send_message(config.owner_id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –ë–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')

       await message.bot.send_message(message.chat.id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –ë–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')
       cursor.execute(f'UPDATE users SET status_block = "on"  WHERE user_id = {reply_user_id}')
       full_name = msg.from_user.full_name
       
       print(f'{full_name} –≤—ã–¥–∞–ª –±–∞–Ω –∏–≥—Ä–æ–∫—É: {reply_user_name}')
       connect.commit()
       return
    else:
       await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"HELPER ADMIN\"", parse_mode='html')






async def unban_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    if not message.reply_to_message:
       await message.reply("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
       return

    msg = message
    user_id = msg.from_user.id
    reply_user_id = msg.reply_to_message.from_user.id
    user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
    reply_user_name = str(reply_user_name[0])

    

    if user_status == 'Owner':
       await message.bot.send_message(message.chat.id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –†–∞–∑–±–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')
       cursor.execute(f'UPDATE users SET status_block = "off"  WHERE user_id = {reply_user_id}')
       connect.commit()
       return
    if user_status == 'Helper_Admin':
       await message.bot.send_message(config.owner_id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –†–∞–∑–±–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')

       await message.bot.send_message(message.chat.id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –†–∞–∑–±–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')
       cursor.execute(f'UPDATE users SET status_block = "off"  WHERE user_id = {reply_user_id}')
       connect.commit()
       full_name = msg.from_user.full_name
       reply_full_name = msg.reply_to_message.from_user.full_name
       print(f'{full_name} –≤—ã–¥–∞–ª —Ä–∞–∑–±–∞–Ω –∏–≥—Ä–æ–∫—É: {reply_full_name}')
       return
    else:
       await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"HELPER ADMIN\"", parse_mode='html')




async def unban_id_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return

    
    msg = message
    user_id = msg.from_user.id
    reply_user_id = int(message.text.split()[1])

    user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    reply_user_name = cursor.execute(f"SELECT user_name from users where user_id = {reply_user_id}").fetchone()
    reply_user_name = str(reply_user_name[0])

    

    if user_status == 'Owner':
       await message.bot.send_message(reply_user_id, f"‚úÖ | <a href='tg://user?id={user_id}'>{reply_user_name}</a>, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ ID", parse_mode='html')

       await message.bot.send_message(message.chat.id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –†–∞–∑–±–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ ID\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')
       cursor.execute(f'UPDATE users SET status_block = "off"  WHERE user_id = {reply_user_id}')
       connect.commit()
       return
    if user_status == 'Helper_Admin':
       await message.bot.send_message(reply_user_id, f"‚úÖ | <a href='tg://user?id={user_id}'>{reply_user_name}</a>, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ ID", parse_mode='html')
       await message.bot.send_message(config.owner_id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –†–∞–∑–±–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ ID\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')

       await message.bot.send_message(message.chat.id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –†–∞–∑–±–∞–Ω –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ ID\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: <a href='tg://user?id={user_id}'>{reply_user_name}</a>", parse_mode='html')
       cursor.execute(f'UPDATE users SET status_block = "off"  WHERE user_id = {reply_user_id}')
       connect.commit()
       full_name = msg.from_user.full_name
       reply_full_name = msg.reply_to_message.from_user.full_name
       print(f'{full_name} –≤—ã–¥–∞–ª —Ä–∞–∑–±–∞–Ω –∏–≥—Ä–æ–∫—É: {reply_full_name}')
       return
    else:
       await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"HELPER ADMIN\"", parse_mode='html')



async def reset_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    msg = message
    user_id = msg.from_user.id
    user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    

    if user_status == 'Owner':
       await message.bot.send_message(message.chat.id, f"‚õîÔ∏è |–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>\n‚öôÔ∏è |–î–µ–π—Å—Ç–≤–∏–µ: –ú–∞—Å–æ–≤–æ–µ –æ–±–Ω—É–ª–µ–Ω–∏–µ\nüíà | –í—Ä–µ–º—è: –Ω–∞–≤—Å–µ–≥–¥–∞\nüë® |–ò–≥—Ä–æ–∫—É: –í—Å–µ–º –∏–≥—Ä–æ–∫–∞–º", parse_mode='html')
       cursor.execute(f'UPDATE users SET balance = {config.start_money}')
       cursor.execute(f'UPDATE users SET bank = {0}')
       cursor.execute(f'UPDATE users SET depozit = {0}')
       cursor.execute(f'UPDATE users SET rating = {0}')
       cursor.execute(f'UPDATE users SET ethereum = {100}')
       cursor.execute(f'UPDATE mine SET iron = {0}')
       cursor.execute(f'UPDATE mine SET metall = {0}')
       cursor.execute(f'UPDATE mine SET silver = {0}')
       cursor.execute(f'UPDATE mine SET bronza = {0}')
       cursor.execute(f'UPDATE mine SET gold = {0}')
       cursor.execute(f'UPDATE farm SET linen = {0}')
       cursor.execute(f'UPDATE farm SET cotton = {0}')
       cursor.execute(f'UPDATE house SET house = {0}')
       cursor.execute(f'UPDATE house SET basement = {0}')
       cursor.execute(f'UPDATE cars SET cars = {0}')
       cursor.execute(f'UPDATE cars SET hp = {0}')
       cursor.execute(f'UPDATE cars SET benz = {0}')
       cursor.execute(f'UPDATE bot_time SET stavka_games = {0} ')
       cursor.execute(f'UPDATE bot_time SET stavka_bank = {0} ')
       cursor.execute(f'UPDATE bot_time SET stavka_bonus = {0} ')
       cursor.execute(f'UPDATE bot_time SET stavka_depozit = {0} ')
       cursor.execute(f'UPDATE bot_time SET time_pick = {0} ')
       cursor.execute(f'UPDATE bot_time SET time_rake = {0} ')
       cursor.execute(f'UPDATE bot_time SET time_craft = {0} ')
       cursor.execute(f'UPDATE bot_time SET time_kit = {0} ')
       cursor.execute(f'UPDATE family SET balance = {0} ')
       connect.commit()
       full_name = msg.from_user.full_name
       print(f'{full_name} —Å–¥–µ–ª–∞–ª –º–∞—Å–æ–≤–æ–µ –æ–±–Ω—É–ª–µ–Ω–∏–µ')
       return
    else:
       await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"OWNER\"", parse_mode='html')


async def help_admins_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_id = message.from_user.id

    await message.bot.send_message(message.chat.id, f"""
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —á–∞—Ç–∞ ‚õîÔ∏è

1Ô∏è‚É£ /channel_mute [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] [–º\–¥\—á] [–ø—Ä–∏—á–∏–Ω–∞] - –í—ã–¥–∞—á–∞ –∑–∞—Ç—ã—á–∫–∏ –∏–≥—Ä–æ–∫—É 
2Ô∏è‚É£ /channel_ban [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ] [–º\–¥\—á] [–ø—Ä–∏—á–∏–Ω–∞] - –í—ã–¥–∞—á–∞ –±–∞–Ω–∞ –∏–≥—Ä–æ–∫—É
3Ô∏è‚É£ /channel_unmute - —Å–Ω—è—Ç–∏–µ –∑–∞—Ç—ã—á–∫–∏ –∏–≥—Ä–æ–∫—É 
4Ô∏è‚É£ /channel_unban - —Å–Ω—è—Ç–∏–µ –±–∞–Ω–∞ –∏–≥—Ä–æ–∫—É 

‚ÑπÔ∏è–ö–æ–º–∞–Ω–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è     
    """, parse_mode='html')



async def warn_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    reply_user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
    reply_user_name = str(reply_user_name[0])
    user_id = message.from_user.id
    reply_user_id = message.reply_to_message.from_user.id

    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])
    
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_status = str(user_status[0])

    warn = cursor.execute("SELECT warn from warn where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
    warn = int(warn[0])

    warn2 = warn + 1
   
    if user_status == 'Owner':
       if warn2 > 5:
          await message.bot.send_message(message.chat.id, f"‚ö†Ô∏è | <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> , –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ", parse_mode='html')
          cursor.execute(f'UPDATE users SET status_block = "on" WHERE user_id = {reply_user_id}')
          cursor.execute(f'UPDATE warn SET warn = {0} WHERE user_id = {reply_user_id}')
          connect.commit()
          return
    if user_status == 'Helper_Admin':

       if reply_user_id == config.owner_id:
         return await message.reply(f'‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–∞—Ç—å –≤–∞—Ä–Ω <b>–≤–ª–∞–¥–µ–ª—å—Ü—É –±–æ—Ç–∞</b>', parse_mode='html')
       else:
         pass

       if warn2 > 5:
          await message.bot.send_message(message.chat.id, f"‚ö†Ô∏è | <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> , –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ", parse_mode='html')
          cursor.execute(f'UPDATE users SET status_block = "on" WHERE user_id = {reply_user_id}')
          cursor.execute(f'UPDATE warn SET warn = {0} WHERE user_id = {reply_user_id}')
          connect.commit()
          return
    if user_status == 'Owner':
       await message.bot.send_message(message.chat.id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –í—ã–¥–∞—á–∞ –≤–∞—Ä–Ω–∞
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')
       cursor.execute(f'UPDATE warn SET warn = {warn + 1} WHERE user_id = {reply_user_id}')
       connect.commit()
       return
    if user_status == 'Helper_Admin':
       await message.bot.send_message(config.owner_id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –í—ã–¥–∞—á–∞ –≤–∞—Ä–Ω–∞
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')

       await message.bot.send_message(message.chat.id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –í—ã–¥–∞—á–∞ –≤–∞—Ä–Ω–∞
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')
       cursor.execute(f'UPDATE warn SET warn = {warn + 1} WHERE user_id = {reply_user_id}')
       connect.commit()
       return
    else:
       await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"HELPER-ADMINS\"", parse_mode='html')
    
    


async def warn_id_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    reply_user_id = int(message.text.split()[1])

    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    reply_user_name = cursor.execute(f"SELECT user_name from users where user_id = {reply_user_id}").fetchone()
    reply_user_name = str(reply_user_name[0])
    user_id = message.from_user.id
    

    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])
    
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_status = str(user_status[0])

    warn = cursor.execute(f"SELECT warn from warn where user_id = {reply_user_id}").fetchone()
    warn = int(warn[0])

    warn2 = warn + 1
   
    if user_status == 'Owner':
       if warn2 > 5:
          await message.bot.send_message(reply_user_id, f"‚ö†Ô∏è | <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> , –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–∑-–∑–∞ 6\6 –≤–∞—Ä–Ω–æ–≤", parse_mode='html')

          await message.bot.send_message(message.chat.id, f"‚ö†Ô∏è | –ê–∫–∫–∞—É–Ω—Ç: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ", parse_mode='html')
          cursor.execute(f'UPDATE users SET status_block = "on" WHERE user_id = {reply_user_id}')
          cursor.execute(f'UPDATE warn SET warn = {0} WHERE user_id = {reply_user_id}')
          connect.commit()
          return
    if user_status == 'Helper_Admin':

       if reply_user_id == config.owner_id:
         return await message.reply(f'‚ùóÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –¥–∞—Ç—å –≤–∞—Ä–Ω <b>–≤–ª–∞–¥–µ–ª—å—Ü—É –±–æ—Ç–∞</b>', parse_mode='html')
       else:
         pass


       if warn2 > 5:
          await message.bot.send_message(reply_user_id, f"‚ö†Ô∏è | <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> , –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–∑-–∑–∞ 6\6 –≤–∞—Ä–Ω–æ–≤", parse_mode='html')

          await message.bot.send_message(config.owner_id, f"‚ö†Ô∏è | –ê–∫–∫–∞—É–Ω—Ç: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ", parse_mode='html')

          await message.bot.send_message(message.chat.id, f"‚ö†Ô∏è | –ê–∫–∫–∞—É–Ω—Ç: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ", parse_mode='html')
          cursor.execute(f'UPDATE users SET status_block = "on" WHERE user_id = {reply_user_id}')
          cursor.execute(f'UPDATE warn SET warn = {0} WHERE user_id = {reply_user_id}')
          connect.commit()
          return
    if user_status == 'Owner':
       await message.bot.send_message(message.chat.id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –í—ã–¥–∞—á–∞ –≤–∞—Ä–Ω–∞ –ø–æ ID
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')
       cursor.execute(f'UPDATE warn SET warn = {warn + 1} WHERE user_id = {reply_user_id}')
       connect.commit()
       return
    if user_status == 'Helper_Admin':
       await message.bot.send_message(config.owner_id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –í—ã–¥–∞—á–∞ –≤–∞—Ä–Ω–∞ –ø–æ ID
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')

       await message.bot.send_message(message.chat.id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –í—ã–¥–∞—á–∞ –≤–∞—Ä–Ω–∞ –ø–æ ID
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')
       cursor.execute(f'UPDATE warn SET warn = {warn + 1} WHERE user_id = {reply_user_id}')
       connect.commit()
       return
    else:
       await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"HELPER-ADMINS\"", parse_mode='html')



async def unwarn_id_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    reply_user_id = int(message.text.split()[1])

    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    reply_user_name = cursor.execute(f"SELECT user_name from users where user_id = {reply_user_id}").fetchone()
    reply_user_name = str(reply_user_name[0])
    user_id = message.from_user.id
    

    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])
    
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_status = str(user_status[0])

    warn = cursor.execute(f"SELECT warn from warn where user_id = {reply_user_id}").fetchone()
    warn = int(warn[0])

    warn2 = warn - 1
   
    if user_status == 'Owner':
       if warn2 < 0:
          await message.bot.send_message(message.chat.id, f"üÜò | –ù–µ–ª—å–∑—è –∑–∞–±–∏—Ä–∞—Ç—å –±–æ–ª—å—à–µ –≤–∞—Ä–Ω–æ–≤ —á–µ–º —É —Å–∞–º–æ–≥–æ –∏–≥—Ä–æ–∫–∞")
          return
    if user_status == 'Helper_Admin':
       if warn2 < 0:
          await message.message.bot.send_message(message.chat.id, f"üÜò | –ù–µ–ª—å–∑—è –∑–∞–±–∏—Ä–∞—Ç—å –±–æ–ª—å—à–µ –≤–∞—Ä–Ω–æ–≤ —á–µ–º —É —Å–∞–º–æ–≥–æ –∏–≥—Ä–æ–∫–∞")
          return
    if user_status == 'Owner':
       await message.message.bot.send_message(message.chat.id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –û—Ç–±–æ—Ä –≤–∞—Ä–Ω–æ–≤ –ø–æ ID
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')
       cursor.execute(f'UPDATE warn SET warn = {warn - 1} WHERE user_id = {reply_user_id}')
       connect.commit()
       return
    if user_status == 'Helper_Admin':
       await message.bot.send_message(config.owner_id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –û—Ç–±–æ—Ä –≤–∞—Ä–Ω–æ–≤ –ø–æ ID
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')
       await message.bot.send_message(message.chat.id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –û—Ç–±–æ—Ä –≤–∞—Ä–Ω–æ–≤ –ø–æ ID
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')
       cursor.execute(f'UPDATE warn SET warn = {warn - 1} WHERE user_id = {reply_user_id}')
       connect.commit()
       return
    else:
       await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"HELPER-ADMINS\"", parse_mode='html')



async def unwarn_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    if not message.reply_to_message:
       await message.reply("üÜò | –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
       return   
    reply_user_id = message.reply_to_message.from_user.id

    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    reply_user_name = cursor.execute(f"SELECT user_name from users where user_id = {reply_user_id}").fetchone()
    reply_user_name = str(reply_user_name[0])
    user_id = message.from_user.id
    

    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])
    
    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_status = str(user_status[0])

    warn = cursor.execute(f"SELECT warn from warn where user_id = {reply_user_id}").fetchone()
    warn = int(warn[0])

    warn2 = warn - 1
   
    if user_status == 'Owner':
       if warn2 < 0:
          await message.bot.send_message(message.chat.id, f"üÜò | –ù–µ–ª—å–∑—è –∑–∞–±–∏—Ä–∞—Ç—å –±–æ–ª—å—à–µ –≤–∞—Ä–Ω–æ–≤ —á–µ–º —É —Å–∞–º–æ–≥–æ –∏–≥—Ä–æ–∫–∞")
          return
    if user_status == 'Helper_Admin':
       if warn2 < 0:
          await message.bot.send_message(message.chat.id, f"üÜò | –ù–µ–ª—å–∑—è –∑–∞–±–∏—Ä–∞—Ç—å –±–æ–ª—å—à–µ –≤–∞—Ä–Ω–æ–≤ —á–µ–º —É —Å–∞–º–æ–≥–æ –∏–≥—Ä–æ–∫–∞")
          return
    if user_status == 'Owner':
       await message.bot.send_message(message.chat.id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –û—Ç–±–æ—Ä –≤–∞—Ä–Ω–æ–≤
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')
       cursor.execute(f'UPDATE warn SET warn = {warn - 1} WHERE user_id = {reply_user_id}')
       connect.commit()
       return
    if user_status == 'Helper_Admin':
       await message.bot.send_message(config.owner_id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –û—Ç–±–æ—Ä –≤–∞—Ä–Ω–æ–≤
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')
       await message.bot.send_message(message.chat.id, f"""
‚õîÔ∏è | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: <a href='tg://user?id={user_id}'>{user_name}</a>   
‚öôÔ∏è | –î–µ–π—Å—Ç–≤–∏–µ: –û—Ç–±–æ—Ä –≤–∞—Ä–Ω–æ–≤
üë® | –ò–≥—Ä–æ–∫—É: <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>
üõë | –í–∞—Ä–Ω–æ–≤ —É –∏–≥—Ä–æ–∫–∞: {warn2}/6     
       """, parse_mode='html')
       cursor.execute(f'UPDATE warn SET warn = {warn - 1} WHERE user_id = {reply_user_id}')
       connect.commit()
       return
    else:
       await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a> , –¥–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ \"HELPER-ADMINS\"", parse_mode='html')



async def report_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])
    user_id = message.from_user.id

    user_status = cursor.execute("SELECT user_status from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    text = message.text[7:]
    
    if text == '':
       await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, —Ä–µ–ø–æ—Ä—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º", parse_mode='html')
       return
    rows = cursor.execute('SELECT user_id FROM users where user_status = "Helper_Admin"').fetchall()
    for row in rows:
       await message.bot.send_message(row[0], f"<b>üÜò–í–ê–ú –ü–†–ò–®–Å–õ –†–ï–ü–û–†–¢üÜò</b>\nüë® | –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: <a href='tg://user?id={user_id}'>{user_name}</a>\nüí¨ |–°–æ–æ–±—â–µ–Ω–∏–µ: <i>{text}</i>", parse_mode='html')

    await message.bot.send_message(config.owner_id,f"""
<b>üÜò–í–ê–ú –ü–†–ò–®–Å–õ –†–ï–ü–û–†–¢üÜò</b>
üë® | –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: <a href='tg://user?id={user_id}'>{user_name}</a>  
üí¨ |–°–æ–æ–±—â–µ–Ω–∏–µ: <i>{text}</i>
    """, parse_mode='html')  
    await message.bot.send_message(message.chat.id, f"‚úÖ | <a href='tg://user?id={user_id}'>{user_name}</a>, –≤–∞—à —Ä–µ–ø–æ—Ä—Ç –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏", parse_mode='html')



async def channelunban_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    name1 = message.from_user.get_mention(as_html=True)
    if not message.reply_to_message:
       await message.reply("‚Ñπ | –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
       return

    await message.bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(True, True, True, True))
    await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\nüì≤ | –†–∞–∑–±–∞–Ω–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>',  parse_mode='html')

async def channelban_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    name1 = message.from_user.get_mention(as_html=True)
    if not message.reply_to_message:
       await message.reply("‚Ñπ | –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
       return
    comment = " ".join(message.text.split()[1:])
    await message.bot.kick_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False))
    await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\nüõë | –ó–∞–±–∞–Ω–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | –°—Ä–æ–∫: –Ω–∞–≤—Å–µ–≥–¥–∞\nüìÉ | –ü—Ä–∏—á–∏–Ω–∞: {comment}',  parse_mode='html')


async def channelunmute_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    name1 = message.from_user.get_mention(as_html=True)
    if not message.reply_to_message:
       await message.reply("‚Ñπ | –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
       return
    await message.bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(True, True, True, True))
    await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\nüîä | –†–∞–∑–º—É—Ç–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>',  parse_mode='html')


async def channelmute_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    name1 = message.from_user.get_mention(as_html=True)
    if not message.reply_to_message:
       await message.reply("‚Ñπ | –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
       return
    try:
       muteint = int(message.text.split()[1])
       mutetype = message.text.split()[2]
       comment = " ".join(message.text.split()[3:])
    except IndexError:
       await message.reply('‚Ñπ | –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤!\n–ü—Ä–∏–º–µ—Ä:\n<code>/–º—É—Ç 1 —á –ø—Ä–∏—á–∏–Ω–∞</code>')
       return
    if mutetype == "—á" or mutetype == "—á–∞—Å–æ–≤" or mutetype == "—á–∞—Å":
       dt = datetime.now() + timedelta(hours=muteint)
       timestamp = dt.timestamp()
       await message.bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date = timestamp)
       await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\nüõë | –ó–∞–º—É—Ç–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | –°—Ä–æ–∫: {muteint} {mutetype}\nüìÉ | –ü—Ä–∏—á–∏–Ω–∞: {comment}',  parse_mode='html')
    if mutetype == "–º" or mutetype == "–º–∏–Ω—É—Ç" or mutetype == "–º–∏–Ω—É—Ç—ã":
       dt = datetime.now() + timedelta(minutes=muteint)
       timestamp = dt.timestamp()
       await message.bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date = timestamp)
       await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\nüõë | –ó–∞–º—É—Ç–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | –°—Ä–æ–∫: {muteint} {mutetype}\nüìÉ | –ü—Ä–∏—á–∏–Ω–∞: {comment}',  parse_mode='html')
    if mutetype == "–¥" or mutetype == "–¥–Ω–µ–π" or mutetype == "–¥–µ–Ω—å":
       dt = datetime.now() + timedelta(days=muteint)
       timestamp = dt.timestamp()
       await message.bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date = timestamp)
       await message.reply(f'üë§ | –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {name1}\n | üõë–ó–∞–º—É—Ç–∏–ª: <a href="tg://user?id={message.reply_to_message.from_user.id}">{message.reply_to_message.from_user.first_name}</a>\n‚è∞ | –°—Ä–æ–∫: {muteint} {mutetype}\nüìÉ | –ü—Ä–∏—á–∏–Ω–∞: {comment}',  parse_mode='html')



async def disconect_database_handler(message):
    if not message.reply_to_message:
       await message.bot.send_message(message.chat.id , f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ", parse_mode='html')
       return
       

    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return

    user_id = message.from_user.id
    reply_user_id = message.reply_to_message.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.reply_to_message.from_user.id,)).fetchone()
    user_name = str(user_name[0])

    user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
    user_status = str(user_status[0])
    i = f'''
üóÑ –í—ã —É–¥–∞–ª–∏–ª–∏ <b>{user_name}</b> —Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö 
   '''

    i2 = f'''
‚ùóÔ∏è –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –æ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ <b>OWNER</b>
‚ùï–î–ª—è –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∞–≤, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É <code>–î–æ–Ω–∞—Ç</code>
   '''

    text = [i, i2]
    if user_status == 'Owner':
        await message.reply(text[0], parse_mode='html')
        cursor.execute(f'DELETE from users where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from mine where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from user_case where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from farm where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from house where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from cars where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from bot_time where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from time_bank where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from ob_time where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from time_prefix where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from time_sms where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from warn where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from console where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from channel_pov where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from avatarka where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from reput where user_id = {reply_user_id}')
        cursor.execute(f'DELETE from h_module where user_id = {reply_user_id}')
        connect.commit()
    else:  
        await message.reply(text[1], parse_mode='html')

async def gamevb_handler(message):
   status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
   status_block = str(status_block[0])

   if status_block == 'on':
       return
   msg = message
   user_id = msg.from_user.id
   user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
   user_name = str(user_name[0])

   period = 5

   balance = cursor.execute("SELECT balance from users where user_id = ?",(message.from_user.id,)).fetchone()
   balance = int(balance[0])



   get = cursor.execute("SELECT stavka_games FROM bot_time WHERE user_id = ?", (message.from_user.id,)).fetchone()
   last_stavka = f"{int(get[0])}"
   stavkatime = time.time() - float(last_stavka)
   if stavkatime > period:
      if balance > 0:
         await message.bot.send_message(message.chat.id, f"""
<a href='tg://user?id={user_id}'>{user_name}</a>, –≤—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –≤ GAME-VB ? üßä

‚ÑπÔ∏è | –í —ç—Ç–æ–π –∏–≥—Ä–µ –≤—ã –∏–≥—Ä–∞–µ—Ç–µ —Å—Ä–∞–∑—É –Ω–∞ –≤–µ—Å—å <b>–±–∞–ª–∞–Ω—Å</b>

‚ÜòÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ         
""",reply_markup=gamevbmenu,  parse_mode='html')
      else:
         await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –æ—à–∏–±–∫–∞! –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! ", parse_mode='html')
   else:
      await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 5 —Å–µ–∫—É–Ω–¥", parse_mode='html')         

      
async def info_id_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    msg = message
    user_id = msg.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])

    

    user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
    user_status = str(user_status[0])

    reply_user_id = int(message.text.split()[1])

    balance = cursor.execute(f"SELECT balance from users where user_id = {reply_user_id}").fetchone()
    balance = int(balance[0])
    balance2 = '{:,}'.format(balance).replace(',', '.')

    reply_user_name = cursor.execute(f"SELECT user_name from users where user_id = {reply_user_id}").fetchone()
    reply_user_name = str(reply_user_name[0])

    bank = cursor.execute(f"SELECT bank from users where user_id = {reply_user_id}").fetchone()
    bank = int(bank[0])
    bank3 = '{:,}'.format(bank).replace(',', '.')

    user_tg_name = '–ê–∫–∫–∞—É–Ω—Ç'

    reply_user_status = cursor.execute(f"SELECT user_status from users where user_id = {reply_user_id}").fetchone()
    reply_user_status = str(reply_user_status[0])

    ethereum = cursor.execute(f"SELECT ethereum from users where user_id = {reply_user_id}").fetchone()
    ethereum = int(ethereum[0])
    ethereum2 = '{:,}'.format(ethereum).replace(',', '.')

    rating = cursor.execute(f"SELECT rating from users where user_id = {reply_user_id}").fetchone()
    rating = int(rating[0])
    rating2 = '{:,}'.format(rating).replace(',', '.')

    status_block = cursor.execute(f"SELECT status_block from users where user_id = {reply_user_id}").fetchone()
    status_block = str(status_block[0])

    time_register = cursor.execute(f"SELECT time_register from users where user_id = {reply_user_id}").fetchone()
    time_register = time_register[0]

    pref = cursor.execute(f"SELECT pref from users where user_id = {reply_user_id}").fetchone()
    pref = str(pref[0])

    donate_coins = cursor.execute(f"SELECT donate_coins from users where user_id = {reply_user_id}").fetchone()
    donate_coins = int(donate_coins[0])
    donate_coins2 = '{:,}'.format(donate_coins).replace(',', '.')

    bank2 = cursor.execute(f"SELECT bank2 from users where user_id = {reply_user_id}").fetchone()
    bank2 = int(bank2[0])
    bank22 = '{:,}'.format(bank2).replace(',', '.')

    depozit = cursor.execute(f"SELECT depozit from users where user_id = {reply_user_id}").fetchone()
    depozit = int(depozit[0])
    depozit2 = '{:,}'.format(depozit).replace(',', '.')

    if user_status != ['Owner', 'Helper_Admin', 'Admin']:
       user_status2 = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    if user_status in ['Owner', 'Helper_Admin', 'Admin']:
       await message.bot.send_message(message.chat.id, f"""
<a href='tg://user?id={user_id}'>{user_name}</a> , –≤–æ—Ç –¥–∞–Ω–Ω—ã–µ –æ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> :

üí¨ | –¢–µ–ª–µ–≥—Ä–∞–º: <a href='tg://user?id={reply_user_id}'>{user_tg_name}</a>
üü¢ | –°—Ç–∞—Ç—É—Å: {reply_user_status}
üü© | –°—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {status_block}

üë§ | –ù–∏–∫: {reply_user_name}
üí∞ | –ë–∞–ª–∞–Ω—Å: {balance2}$
üè™ | –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç: {bank3}$
üè™ | –•—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç: {bank22}$
üèõ | –î–µ–ø–æ–∑–∏—Ç: {depozit2}$
üü™ | –≠—Ñ–∏—Ä–∏—É–º: {ethereum2} üü£
üíé | –†–µ–π—Ç–∏–Ω–≥: {rating2} üíé
ü™ô | Donate-Coins: {donate_coins2} ü™ô

üìÜ | –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {time_register}     
       """, parse_mode='html')



async def info_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
       return
    msg = message
    user_id = msg.from_user.id
    user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
    user_name = str(user_name[0])

    if not message.reply_to_message:
       await message.bot.send_message(message.chat.id , f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ", parse_mode='html')
       return
       
    user_status = cursor.execute("SELECT user_status from users where user_id = ?", (message.from_user.id,)).fetchone()
    user_status = str(user_status[0])

    reply_user_id = message.reply_to_message.from_user.id

    balance = cursor.execute(f"SELECT balance from users where user_id = {reply_user_id}").fetchone()
    balance = int(balance[0])
    balance2 = '{:,}'.format(balance).replace(',', '.')

    reply_user_name = cursor.execute(f"SELECT user_name from users where user_id = {reply_user_id}").fetchone()
    reply_user_name = str(reply_user_name[0])

    bank = cursor.execute(f"SELECT bank from users where user_id = {reply_user_id}").fetchone()
    bank = int(bank[0])
    bank3 = '{:,}'.format(bank).replace(',', '.')

    user_tg_name = message.reply_to_message.from_user.get_mention(as_html=True)

    reply_user_status = cursor.execute(f"SELECT user_status from users where user_id = {reply_user_id}").fetchone()
    reply_user_status = str(reply_user_status[0])

    ethereum = cursor.execute(f"SELECT ethereum from users where user_id = {reply_user_id}").fetchone()
    ethereum = int(ethereum[0])
    ethereum2 = '{:,}'.format(ethereum).replace(',', '.')

    rating = cursor.execute(f"SELECT rating from users where user_id = {reply_user_id}").fetchone()
    rating = int(rating[0])
    rating2 = '{:,}'.format(rating).replace(',', '.')

    status_block = cursor.execute(f"SELECT status_block from users where user_id = {reply_user_id}").fetchone()
    status_block = str(status_block[0])

    time_register = cursor.execute(f"SELECT time_register from users where user_id = {reply_user_id}").fetchone()
    time_register = time_register[0]

    pref = cursor.execute(f"SELECT pref from users where user_id = {reply_user_id}").fetchone()
    pref = str(pref[0])

    donate_coins = cursor.execute(f"SELECT donate_coins from users where user_id = {reply_user_id}").fetchone()
    donate_coins = int(donate_coins[0])
    donate_coins2 = '{:,}'.format(donate_coins).replace(',', '.')

    bank2 = cursor.execute(f"SELECT bank2 from users where user_id = {reply_user_id}").fetchone()
    bank2 = int(bank2[0])
    bank22 = '{:,}'.format(bank2).replace(',', '.')

    depozit = cursor.execute(f"SELECT depozit from users where user_id = {reply_user_id}").fetchone()
    depozit = int(depozit[0])
    depozit2 = '{:,}'.format(depozit).replace(',', '.')

    if user_status in ['Owner', 'Helper_Admin', 'Admin']:
       await message.bot.send_message(message.chat.id, f"""
<a href='tg://user?id={user_id}'>{user_name}</a> , –≤–æ—Ç –¥–∞–Ω–Ω—ã–µ –æ <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a> :

üí¨ | –¢–µ–ª–µ–≥—Ä–∞–º: {user_tg_name}
üü¢ | –°—Ç–∞—Ç—É—Å: {reply_user_status}
üü© | –°—Ç–∞—Ç—É—Å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏: {status_block}

üë§ | –ù–∏–∫: {reply_user_name}
üí∞ | –ë–∞–ª–∞–Ω—Å: {balance2}$
üè™ | –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á—ë—Ç: {bank3}$
üè™ | –•—Ä–∞–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç: {bank22}$
üèõ | –î–µ–ø–æ–∑–∏—Ç: {depozit2}$
üü™ | –≠—Ñ–∏—Ä–∏—É–º: {ethereum2} üü£
üíé | –†–µ–π—Ç–∏–Ω–≥: {rating2} üíé
ü™ô | Donate-Coins: {donate_coins2} ü™ô

üìÜ | –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {time_register}     
       """, parse_mode='html')

async def start_handler(message):



    name = message.from_user.get_mention(as_html=True)
    i = f'''
üëã –ü—Ä–∏–≤–µ—Ç <b>{name}</b>, —è –∏–≥—Ä–æ–≤–æ–π –±–æ—Ç <b>{config.full_bot_name}</b>
üí∏ –¢–µ–±–µ –∫–∞–∫ –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –±—ã–ª –≤—ã–¥–∞–Ω –ø–æ–¥–∞—Ä–æ–∫ –≤ —Ä–∞–∑–º–µ—Ä–µ <code>{'{:,}'.format(config.start_money).replace(',', '.')}$</code>
‚ùóÔ∏è –î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ —Å –º–æ–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏, –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É <code>–ü–æ–º–æ—â—å</code> , –∏–ª–∏ –≤–∏–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É <b>–Ω–∏–∂–µ</b>
‚ûï –¢–∞–∫ –∂–µ —Ç—ã –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ —Å–≤–æ–π —á–∞—Ç –ø–æ –∫–Ω–æ–ø–∫–µ <b>–Ω–∏–∂–µ</b>
    '''
    i2 = f'''
‚ùóÔ∏è <b>{name}</b>, –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ
‚ùï –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞ –∫–∞–∫–∞—è —Ç–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å –∫–∞–∫–æ–π —Ç–æ –∫–æ–º–∞–Ω–¥–æ–π, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ {config.owner} –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ <b>[–ï—Å–ª–∏ —É –≤–∞—Å SPAM BAN, —Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–µ–º—É —á–µ—Ä–µ–∑ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥ /m [ID] [message] –∏–ª–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /report ]</b>
    '''

    text_register = [i, i2]
    msg = message
    user_id = msg.from_user.id
    full_name = msg.from_user.full_name
    user_name = '–ò–≥—Ä–æ–∫'
    user_status = "Player"
    status_block = 'off'
    stats_status = 'off'
    pref = '–ò–≥—Ä–æ–∫'
    status_console = 'off'
    avatarka_start = 'none'
    klan_index = 0
    status_family = 0
    chat_id = message.chat.id
    result = time.localtime()

    if int(result.tm_mon) <= 9:
      p = "0"
    else:
      p = ''
    times = f'{result.tm_mday}.{p}{result.tm_mon}.{result.tm_year} | {result.tm_hour}:{result.tm_min}:{result.tm_sec}'
    times2 = str(times)

    cursor.execute(f"SELECT user_id FROM users WHERE user_id = '{user_id}'")
    if cursor.fetchone() is None:
       
       reffer_id = message.text[7:]
       print(reffer_id)
       if reffer_id != '':
         reffer_id = int(reffer_id)
         money = await user_money(reffer_id)
         cursor.execute(f'UPDATE money_balance SET money = {money + 50} WHERE user_id = {reffer_id}')

         reffer_name = cursor.execute(f'SELECT user_name FROM users WHERE user_id = {reffer_id}').fetchone()
         reffer_name = str(reffer_name[0])

         user_name = message.from_user.full_name

         add_users = cursor.execute(f'SELECT summ FROM reffer WHERE user_id = {reffer_id}').fetchone()
         add_users = int(add_users[0])

         await message.reply(f'‚úÖ –í—ã —Å—Ç–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º –∏–≥—Ä–æ–∫–∞ {reffer_name}')
         cursor.execute(f'UPDATE reffer SET summ = {add_users + 1} WHERE user_id = {reffer_id}')



         try:
            await message.bot.send_message(reffer_id, f'üí∞ –í—ã —Å—Ç–∞–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º –∏–≥—Ä–æ–∫–∞ {user_name}, –∏ –ø–æ–ª—É—á–∏–ª–∏ –∑–∞ —ç—Ç–æ 50 —Ä—É–±.')
         except:
            pass


       cursor.execute("INSERT INTO users VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);", (user_id, user_name, full_name, user_status, config.start_money, 0, 0, 0, status_block, times2, pref, 0, 0, 0, 0, stats_status))
       cursor.execute("INSERT INTO mine VALUES(?, ?, ?, ?, ?, ?, ?, ?);",(user_id, full_name,status_block, 0, 0, 0, 0, 0))
       cursor.execute("INSERT INTO farm VALUES(?, ?, ?, ?, ?);",(user_id, full_name,status_block, 0, 0))
       cursor.execute("INSERT INTO house VALUES(?, ?, ?, ?);",(user_id, user_name, 0, 0))
       cursor.execute("INSERT INTO cars VALUES(?, ?, ?, ?, ?);",(user_id, user_name, 0, 0, 0))
       cursor.execute("INSERT INTO user_case VALUES(?, ?, ?);",(user_id, 0, 0))
       cursor.execute("INSERT INTO bot_time VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?);", (user_id, 0, 0, 0, 0, 0, 0, 0, 0))
       cursor.execute("INSERT INTO warn VALUES(?, ?);",(user_id, 0))
       cursor.execute("INSERT INTO time_bank VALUES(?, ?);",(user_id, 0))
       cursor.execute("INSERT INTO ob_time VALUES(?, ?);",(user_id, 0))
       cursor.execute("INSERT INTO warn VALUES(?, ?);",(user_id, 0))
       cursor.execute("INSERT INTO console VALUES(?, ?);",(user_id, status_console))
       cursor.execute("INSERT INTO time_prefix VALUES(?, ?);",(user_id, 0))
       cursor.execute("INSERT INTO time_sms VALUES(?, ?);",(user_id, 0))
       cursor.execute("INSERT INTO channel_pov VALUES(?, ?);",(user_id, 0))
       cursor.execute("INSERT INTO avatarka VALUES(?, ?);",(user_id, avatarka_start))
       cursor.execute("INSERT INTO reput VALUES(?, ?);",(user_id, 0))
       cursor.execute("INSERT INTO h_module VALUES(?, ?);",(user_id, 0))
       cursor.execute("INSERT INTO raindow_case VALUES(?, ?);",(user_id, 0))
       cursor.execute("INSERT INTO reffer VALUES(?, ?);",(user_id, 0))
       await register_money(user_id)
       connect.commit()
       print(f'–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤ –±–æ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {full_name}')
       await bot.send_message(message.chat.id, text_register[0], reply_markup=reg, parse_mode='html')

    else:
       await bot.send_message(message.chat.id, text_register[1], reply_markup=reg, parse_mode='html')


async def sistem_message_handler(message):
    status_block = cursor.execute("SELECT status_block from users where user_id = ?",(message.from_user.id,)).fetchone()
    status_block = str(status_block[0])

    if status_block == 'on':
        return
    try:
        text = ' '.join(message.text.split()[2:])

        msg = message
        user_id = msg.from_user.id
        user_name = cursor.execute("SELECT user_name from users where user_id = ?",(message.from_user.id,)).fetchone()
        user_name = str(user_name[0])

        reply_user_id = int(message.text.split()[1])
        reply_user_name = cursor.execute(f"SELECT user_name from users where user_id = {reply_user_id}").fetchone()
        reply_user_name = str(reply_user_name[0])

        period = 5
        get = cursor.execute("SELECT stavka FROM time_sms WHERE user_id = ?", (message.from_user.id,)).fetchone()
        last_stavka = f"{int(get[0])}"
        stavkatime = time.time() - float(last_stavka)

        if len(text) > 35:
            await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ —á–µ–º 35 —Å–∏–º–≤–æ–ª–æ–≤ ", parse_mode='html')
            return
        if stavkatime > period:
            await message.bot.send_message(user_id, f"üí¨ | [–Ø ‚û°Ô∏è <a href='tg://user?id={reply_user_id}'>{reply_user_name}</a>] {text}", parse_mode='html')
            await message.bot.send_message(reply_user_id, f"üí¨ | [<a href='tg://user?id={user_id}'>{user_name}</a> ‚û°Ô∏è –Ø] {text}", parse_mode='html')
            cursor.execute(f'UPDATE time_sms SET stavka = {time.time()} WHERE user_id = {user_id}')
            connect.commit()
            return
        else:
            await message.bot.send_message(user_id, f"üÜò | –ò–≥—Ä–æ–∫, —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–∏—Å–∞—Ç—å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 5 —Å–µ–∫—É–Ω–¥", parse_mode='html')
            return
    except:
        await message.bot.send_message(message.chat.id, f"üÜò | <a href='tg://user?id={user_id}'>{user_name}</a>, –æ—à–∏–±–∫–∞! –õ–∏–±–æ –≤—ã –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ ID, –∏–ª–∏ –¥–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ –∏–≥—Ä–∞–µ—Ç –≤ –±–æ—Ç–∞", parse_mode='html')
        return

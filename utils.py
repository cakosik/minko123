from imports import *
import aiogram

async def sistem_number(number):
    number = (number).replace('–µ', 'e').replace('k', '–∫').replace('–∫', '000')
    number = int(float(number))

    return number

async def scor_summ(number):
    if int(number) in range(0, 1000):
        number3 = number
    if int(number) in range(1000, 999999):
        number1 = number / 1000
        number2 = round(number1)
        number3 = f'{number2} —Ç—ã—â'
    if int(number) in range(1000000, 999999999):
        number1 = number / 1000000
        number2 = round(number1)
        number3 = f'{number2} –º–ª–Ω'
    if int(number) in range(1000000000, 999999999999):
        number1 = number / 1000000000
        number2 = round(number1)
        number3 = f'{number2} –º–ª—Ä–¥'
    if int(number) in range(1000000000000, 999999999999999):
        number1 = number / 1000000000000
        number2 = round(number1)
        number3 = f'{number2} —Ç—Ä–ª–Ω'
    if int(number) in range(1000000000000000, 999999999999999999):
        number1 = number / 1000000000000000
        number2 = round(number1)
        number3 = f'{number2} –∫–≤–¥—Ä'
    if int(number) in range(1000000000000000000, 999999999999999999999):
        number1 = number / 1000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –∫–≤–Ω—Ç'
    if int(number) in range(1000000000000000000000, 999999999999999999999999):
        number1 = number / 1000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} —Å–∫—Å—Ç'
    if int(number) in range(1000000000000000000000000, 999999999999999999999999999):
        number1 = number / 1000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} —Ç—Ä–∏–∫—Å'
    if int(number) in range(1000000000000000000000000000,999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} —Ç–≤–∏–Ω–∫—Å'
    if int(number) in range(1000000000000000000000000000000, 999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} —Å–µ–ø—Ç'
    if int(number) in range(1000000000000000000000000000000000, 999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –æ–∫—Ç–ª'
    if int(number) in range(1000000000000000000000000000000000000, 999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –Ω–æ–Ω–ª'
    if int(number) in range(1000000000000000000000000000000000000000, 999999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –¥–µ–∫–∞–ª'
    if int(number) in range(1000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} —ç–Ω–¥–∫'
    if int(number) in range(1000000000000000000000000000000000000000000000,999999999999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –¥–æ–∫—Ç–ª'
    if int(number) in range(1000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999) :
        number1 = number / 1000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –≥—É–≥–ª'
    if int(number) in range(1000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999) :
        number1 = number / 1000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –∫–∏–Ω–¥'
    if int(number) in range(1000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999) :
        number1 = number / 1000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} —Ç—Ä–∏–ø—Ç'
    if int(number) in range(1000000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999999) :
        number1 = number / 1000000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} —Å—Ä–∏—Å—Ç'
    if int(number) in range(1000000000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –º–∞–Ω–∏—Ç'
    if int(number) in range(1000000000000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –≥–≤–∏–Ω—Ç'
    if int(number) in range(1000000000000000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –ª–∞–Ω–∏—Ç'
    if int(number) in range(1000000000000000000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –æ–∫—Ç–∏—Ç'
    if int(number) in range(1000000000000000000000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –Ω–æ–≤–∏—Ç'
    if int(number) in range(1000000000000000000000000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} —É–Ω–¥'
    if int(number) in range(1000000000000000000000000000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –∫–æ–Ω—Ç'
    if int(number) in range(1000000000000000000000000000000000000000000000000000000000000000000000000000000000, 999999999999999999999999999999999999999999999999999999999999999999999999999999999999):
        number1 = number / 1000000000000000000000000000000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} —Ç–µ–Ω—Ç' 
    if int(number) >= 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000:
        number1 = number / 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} —Ñ–µ–Ω–¥'
    if int(number) >= 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000:
        number1 = number / 1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
        number2 = round(number1)
        number3 = f'{number2} –≤–Ω–∞—Ç'

    return number3

async def advertising_utils(number, message):

    text = f'''
–ò–ì–†–û–í–û–ô –ë–û–¢ –ü–ê–ü–†–ò–ö üå∂

üí† –ö–†–ò–ü–¢–û –í–ê–õ–Æ–¢–ê
- –ò–º–µ—Ç—å—Å—è 4 –∫—Ä–∏–ø—Ç–æ –≤–∞–ª—é—Ç—ã –∞ —Ç–æ—á–Ω–µ–µ —Ç–∞–∫–∏–µ –∫–∞–∫ ETHEREUM üü£, BITCOIN üü†, LITECOIN ‚ö™Ô∏è, MAKER üîµ. –í—Å–µ –æ–Ω–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –∫—É—Ä—Å—É.

üé∞ –ö–ê–ó–ò–ù–û
- –£ –Ω–∞—Å –∫–∞–∑–∏–Ω–æ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ—Ç—É –Ω–µ –≤ –æ–¥–Ω–æ–º –∏–∑ —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω—ã—Ö –∏–≥—Ä–æ–≤—ã—Ö –±–æ—Ç–æ–≤ , –æ–Ω–æ –æ—Å–æ–±–µ–Ω–Ω–æ —Ç–µ–º, —á—Ç–æ –∏–≥—Ä–∞ –∏–¥—ë—Ç –Ω–µ —Å –±–æ—Ç–æ–º, –∞ –º–µ–∂–¥—É –∏–≥—Ä–∞–º–∏.

üë∂ –£–†–û–í–ù–ò –ò –ó–ê–î–ê–ù–ò–Ø
- –í –±–æ—Ç–µ —É —Ç–µ–±—è –Ω–µ –±—É–¥–µ—Ç —Å—Ä–∞–∑—É –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É, –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ–±–µ –ø—Ä–∏–π–¥—ë—Ç—Å—è –ø—Ä–æ–π—Ç–∏ –Ω–∞—á–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è, —á–µ–º –±–æ–ª—å—à–µ —É—Ä–æ–≤–µ–Ω—å, —Ç–µ–º –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π

üåÖ –ê–í–ê–¢–ê–†–ö–ò
- –í –±–æ—Ç–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª—é–±—É—é –∞–≤–∞—Ç–∞—Ä–∫—É , –≥–∏—Ñ–∫—É —Å–µ–±–µ –Ω–∞ –±–∞–ª–∞–Ω—Å . –ù–∞—á–∏–Ω–∞—è –æ—Ç —Å–≤–æ–µ–π –ê–≤–∞—Ç–∞—Ä–∫–∏ —Å —Ç–≥, –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—è –ª—é–±–æ–π –≥–∏—Ñ–∫–æ–π/–≤–∏–¥–µ–æ —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞

üõ∞ –ú–ê–ô–ù–ò–ù–ì –§–ï–†–ú–ê
- –í –±–æ—Ç–µ –µ—Å—Ç—å –ú–∞–π–Ω–∏–Ω–≥ —Ñ–µ—Ä–º–∞ , —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É , –∞ –¥–æ—Ö–æ–¥ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —É—Ä–æ–≤–Ω—è –¥–æ–º–∞ 

ü§ù –ü–ï–†–ï–ü–†–û–î–ê–ñ–ò
- –í –±–æ—Ç–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã –∏–≥—Ä–æ–∫–∞–º , –∏ —Å –ø–æ–º–æ—â—å—é —ç—Ç–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–≤–æ–ª—å–Ω–æ –Ω–µ–ø–ª–æ—Ö–∏–µ –¥–µ–Ω—å–≥–∏

üìä –≠–ö–û–ù–û–ú–ò–ö–ê
- –í –±–æ—Ç–µ –û—Ç–ª–∏—á–Ω–∞—è —ç–∫–æ–Ω–æ–º–∏–∫–∞, —á—Ç–æ –¥–∞—ë—Ç –ø–æ–Ω—è—Ç—å —á—Ç–æ –æ–±–Ω—É–ª–µ–Ω–∏–µ –±—É–¥—É—Ç —Ä–∞–∑ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤

üë∂ –ò–ù–°–¢–†–£–ö–¶–ò–Ø
- –í –±–æ—Ç–µ –∏–º–µ–µ—Ç—Å—è –¥–∞–∂–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –±–æ—Ç–æ–º –∏ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º –∏ –æ–Ω–∞ –≤–∞–º –ø–æ–º–æ–∂–µ—Ç –ø—Ä–æ–∫–∞—á–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ

üëæ –ë–û–¢ - @paprikgamebot
üí≠ –ß–ê–¢ - @paprikchat
'''

    if number == 1:

        return await message.answer( parse_mode='html')
    
    elif number == 2:

        add = cursor.execute('SELECT * FROM users').fetchall()


        number_user_on = 0
        number_user_off = 0
        all_number = 0
        await message.answer('üîà –†–µ–∫–ª–∞–º–∞ –Ω–∞—á–∞–ª–∞—Å—å, –∂–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...')

        for user in add:
            all_number += 1
            try:
                await message.bot.send_message(user[0], text, parse_mode='html')
                number_user_on += 1
                # await message.answer(f'‚úÖ –ù–∞ ID: <code>{user[0]}</code>. –ü—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ', parse_mode='html')
            except:
                number_user_off += 1
                # await message.answer(f'‚õîÔ∏è –ù–∞ ID: <code>{user[0]}</code>. –ù–µ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ', parse_mode='html')
            
            if all_number in [1000, 2500, 5000, 10000, 20000, 40000, 80000, 160000, 320000]:
                await message.answer(f"üîâ –£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {'{:,}'.format(all_number).replace(',','.')} —à—Ç.")
        text2 = f'''
üì¢ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–µ–∫–ª–∞–º—ã:

‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—É—á–∞—Ç–µ–ª–µ–π: <code>{'{:,}'.format(number_user_on).replace(',','.')} –∏–≥—Ä–æ–∫–æ–≤</code>
‚õîÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –ø–æ–ª—É—á–∏–≤—à–∏—Ö: <code>{'{:,}'.format(number_user_off).replace(',','.')} –∏–≥—Ä–æ–∫–æ–≤</code>
        '''
        await message.answer(f'<b>üîä –†–ï–ö–õ–ê–ú–ê:</b>', parse_mode='html')
        await message.answer(text, parse_mode='html')
        await message.answer(text2, parse_mode='html')